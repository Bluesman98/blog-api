{"ast":null,"code":"var _jsxFileName = \"/home/bluesman/repos/blog-api/blog-editor/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(props) {\n  _s();\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = event => {\n    event.target.reset();\n    console.log(\"handleSubmit ran\");\n    event.preventDefault(); // üëàÔ∏è prevent page refresh\n\n    // üëáÔ∏è access input values here\n    console.log(\"Username üëâÔ∏è\", userName);\n    console.log(\"Password üëâÔ∏è\", password);\n    // üëáÔ∏è clear all input values in the form\n\n    //very basic login verification\n    if (userName === 'admin' && password === 'dostoevsky') setUser(true);else setLoginError(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"comment-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Username\",\n        name: \"username\",\n        id: \"username\",\n        required: true,\n        onChange: event => setUserName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: 'password',\n        placeholder: \"Password\",\n        name: \"password\",\n        id: \"password\",\n        required: true,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), loginError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Username or Password is incorrect ! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}\n_s(Login, \"v44GxcHSnRugB0S3/h0gvbqlHTQ=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Login","props","userName","setUserName","useState","password","setPassword","handleSubmit","event","target","reset","console","log","preventDefault","setUser","setLoginError","value","loginError"],"sources":["/home/bluesman/repos/blog-api/blog-editor/src/components/Login.js"],"sourcesContent":["function Login(props) {\n    const [userName,setUserName] = useState('')\n    const [password,setPassword] = useState('')\n\n    const handleSubmit = (event) => {\n        event.target.reset();\n        console.log(\"handleSubmit ran\");\n        event.preventDefault(); // üëàÔ∏è prevent page refresh\n    \n        // üëáÔ∏è access input values here\n        console.log(\"Username üëâÔ∏è\", userName);\n        console.log(\"Password üëâÔ∏è\", password);\n        // üëáÔ∏è clear all input values in the form\n    \n        //very basic login verification\n        if(userName==='admin' && password === 'dostoevsky') setUser(true)\n        else setLoginError(true)\n      };\n    return (\n      <div className=\"Login\">\n         <form className=\"comment-form\" onSubmit={handleSubmit}>\n        <label htmlFor=\"username\"></label>\n        <input\n          placeholder=\"Username\"\n          name=\"username\"\n          id=\"username\"\n          required\n          onChange={(event) => setUserName(event.target.value)}\n        ></input>\n        <label htmlFor=\"password\"></label>\n        <input\n        type={'password'}\n          placeholder=\"Password\"\n          name=\"password\"\n          id=\"password\"\n          required\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n        {loginError && <div>Username or Password is incorrect ! </div>}\n        <button type=\"submit\">Login</button>\n      </form>\n      </div>\n    );\n  }\n  \n  export default Login;"],"mappings":";;;AAAA,SAASA,KAAK,CAACC,KAAK,EAAE;EAAA;EAClB,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMG,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,MAAM,CAACC,KAAK,EAAE;IACpBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BJ,KAAK,CAACK,cAAc,EAAE,CAAC,CAAC;;IAExB;IACAF,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEV,QAAQ,CAAC;IACrCS,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEP,QAAQ,CAAC;IACrC;;IAEA;IACA,IAAGH,QAAQ,KAAG,OAAO,IAAIG,QAAQ,KAAK,YAAY,EAAES,OAAO,CAAC,IAAI,CAAC,MAC5DC,aAAa,CAAC,IAAI,CAAC;EAC1B,CAAC;EACH,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,uBACnB;MAAM,SAAS,EAAC,cAAc;MAAC,QAAQ,EAAER,YAAa;MAAA,wBACvD;QAAO,OAAO,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS,eAClC;QACE,WAAW,EAAC,UAAU;QACtB,IAAI,EAAC,UAAU;QACf,EAAE,EAAC,UAAU;QACb,QAAQ;QACR,QAAQ,EAAGC,KAAK,IAAKL,WAAW,CAACK,KAAK,CAACC,MAAM,CAACO,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC9C,eACT;QAAO,OAAO,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS,eAClC;QACA,IAAI,EAAE,UAAW;QACf,WAAW,EAAC,UAAU;QACtB,IAAI,EAAC,UAAU;QACf,EAAE,EAAC,UAAU;QACb,QAAQ;QACR,QAAQ,EAAGR,KAAK,IAAKF,WAAW,CAACE,KAAK,CAACC,MAAM,CAACO,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC9C,EACRC,UAAU,iBAAI;QAAA,UAAK;MAAoC;QAAA;QAAA;QAAA;MAAA,QAAM,eAC9D;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAC/B;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GA3CMjB,KAAK;AAAA,KAALA,KAAK;AA6CZ,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}