{"ast":null,"code":"var _jsxFileName = \"/home/bluesman/repos/blog-api/blog-editor/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Post from \"./components/Post\";\nimport { set } from \"date-fns\";\nimport { BrowserRouter, Routes, Route, Navigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState(null);\n  const [user, setUser] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginError, setLoginError] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  async function fetchPosts() {\n    await fetch(\"http://localhost:3000/posts\").then(res => {\n      return res.json();\n    }).then(data => {\n      setPosts(data);\n    });\n  }\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const handleSubmit = event => {\n    event.target.reset();\n    console.log(\"handleSubmit ran\");\n    event.preventDefault(); // üëàÔ∏è prevent page refresh\n\n    // üëáÔ∏è access input values here\n    console.log(\"Username üëâÔ∏è\", userName);\n    console.log(\"Password üëâÔ∏è\", password);\n    // üëáÔ∏è clear all input values in the form\n\n    //very basic login verification\n    if (userName === 'admin' && password === 'dostoevsky') setUser(true);else setLoginError(true);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [!user && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"comment-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Username\",\n          name: \"username\",\n          id: \"username\",\n          required: true,\n          onChange: event => setUserName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'password',\n          placeholder: \"Password\",\n          name: \"password\",\n          id: \"password\",\n          required: true,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), loginError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Username or Password is incorrect ! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 28\n      }, this), posts !== null && user && posts.map((post, i) => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post,\n          fetchPosts: fetchPosts()\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 18\n        }, this);\n      }) && /*#__PURE__*/_jsxDEV(Route, {\n        path: process.env.PUBLIC_URL + \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: process.env.PUBLIC_URL + \"/home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IO/X9mOKF/qLnAb49ungxoxcu2M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Post","set","BrowserRouter","Routes","Route","Navigate","Link","App","posts","setPosts","user","setUser","userName","setUserName","password","setPassword","loginError","setLoginError","editMode","setEditMode","fetchPosts","fetch","then","res","json","data","handleSubmit","event","target","reset","console","log","preventDefault","value","map","post","i","process","env","PUBLIC_URL"],"sources":["/home/bluesman/repos/blog-api/blog-editor/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Post from \"./components/Post\";\nimport { set } from \"date-fns\";\nimport { BrowserRouter, Routes, Route, Navigate, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [posts, setPosts] = useState(null);\n  const [user,setUser] = useState(false)\n  const [userName,setUserName] = useState('')\n  const [password,setPassword] = useState('')\n  const [loginError,setLoginError] = useState(false)\n  const [editMode, setEditMode] = useState(false)\n\n  async function fetchPosts() {\n    await fetch(\"http://localhost:3000/posts\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setPosts(data);\n      });\n  }\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.target.reset();\n    console.log(\"handleSubmit ran\");\n    event.preventDefault(); // üëàÔ∏è prevent page refresh\n\n    // üëáÔ∏è access input values here\n    console.log(\"Username üëâÔ∏è\", userName);\n    console.log(\"Password üëâÔ∏è\", password);\n    // üëáÔ∏è clear all input values in the form\n\n    //very basic login verification\n    if(userName==='admin' && password === 'dostoevsky') setUser(true)\n    else setLoginError(true)\n  };\n\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n\n      {\n        !user &&           <form className=\"comment-form\" onSubmit={handleSubmit}>\n        <label htmlFor=\"username\"></label>\n        <input\n          placeholder=\"Username\"\n          name=\"username\"\n          id=\"username\"\n          required\n          onChange={(event) => setUserName(event.target.value)}\n        ></input>\n        <label htmlFor=\"password\"></label>\n        <input\n        type={'password'}\n          placeholder=\"Password\"\n          name=\"password\"\n          id=\"password\"\n          required\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n        {loginError && <div>Username or Password is incorrect ! </div>}\n        <button type=\"submit\">Login</button>\n      </form>\n      }\n\n      {posts !== null && user  &&\n        posts.map((post,i) => {\n          return <Post post={post} key={i} fetchPosts={fetchPosts()}/>;\n        })\n        && <Route path={process.env.PUBLIC_URL + \"/\"} element={<Navigate to={process.env.PUBLIC_URL + \"/home\"} />} />\n        }\n\n    </div>\n    </BrowserRouter>\n  );\n \n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}