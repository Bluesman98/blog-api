{"ast":null,"code":"var _jsxFileName = \"/home/bluesman/repos/blog-api/blog-page/src/components/Post.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { format } from \"date-fns\";\nimport Comment from \"../components/Comment\";\nimport \"../styles/Post.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post(props) {\n  _s();\n  const [comments, setComments] = useState(null);\n  const [commentsVisible, setCommentsVisible] = useState(false);\n  useEffect(() => {\n    async function fetchComments() {\n      await fetch(`http://localhost:3000/post/${props.post._id}/comments`).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(data);\n        setComments(data);\n      });\n    }\n    fetchComments();\n  }, []);\n  function postComment(name, content) {\n    fetch(`http://localhost:3000/post/${props.post._id}/comment/create?author=${name}&content=${content}`, {\n      method: 'POST',\n      // or 'PUT'\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n  }\n  const [name, setName] = useState('');\n  const [content, setContent] = useState('');\n  const handleSubmit = event => {\n    console.log('handleSubmit ran');\n    event.preventDefault(); // üëàÔ∏è prevent page refresh\n\n    // üëáÔ∏è access input values here\n    console.log('name üëâÔ∏è', name);\n    console.log('content üëâÔ∏è', content);\n    postComment(name, content);\n\n    // üëáÔ∏è clear all input values in the form\n    setName('');\n    setContent('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: props.post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: format(new Date(props.post.date), \"MMMM do, yyyy \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: format(new Date(props.post.date), \"H:mm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: props.post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), !commentsVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCommentsVisible(true);\n      },\n      children: \"show comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [commentsVisible && comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 20\n        }, this);\n      }), commentsVisible && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"comment-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Name\",\n          name: \"name\",\n          id: \"name\",\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Leave a comment...\",\n          name: \"comment\",\n          id: \"comment\",\n          onChange: event => setContent(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this), commentsVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCommentsVisible(false);\n        },\n        children: \"hide comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"Pz+Vr+dhnYV/7ZvvvAZaaWz3xJU=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["useEffect","useState","format","Comment","Post","props","comments","setComments","commentsVisible","setCommentsVisible","fetchComments","fetch","post","_id","then","res","json","data","console","log","postComment","name","content","method","headers","body","JSON","stringify","setName","setContent","handleSubmit","event","preventDefault","title","Date","date","map","comment","target","value"],"sources":["/home/bluesman/repos/blog-api/blog-page/src/components/Post.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { format } from \"date-fns\";\nimport Comment from \"../components/Comment\";\nimport \"../styles/Post.css\";\n\nfunction Post(props) {\n  const [comments, setComments] = useState(null);\n  const [commentsVisible, setCommentsVisible] = useState(false);\n\n  useEffect(() => {\n    async function fetchComments() {\n      await fetch(`http://localhost:3000/post/${props.post._id}/comments`)\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n          console.log(data);\n          setComments(data);\n        });\n    }\n\n    fetchComments();\n  }, []);\n\n  function postComment(name,content){\n    fetch(`http://localhost:3000/post/${props.post._id}/comment/create?author=${name}&content=${content}`, {\n  method: 'POST', // or 'PUT'\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify(data),\n})\n  }\n\n  const [name, setName] = useState('');\n  const [content, setContent] = useState('');\n\n  const handleSubmit = event => {\n    console.log('handleSubmit ran');\n    event.preventDefault(); // üëàÔ∏è prevent page refresh\n\n    // üëáÔ∏è access input values here\n    console.log('name üëâÔ∏è', name);\n    console.log('content üëâÔ∏è', content);\n    \n    postComment(name,content)\n\n    // üëáÔ∏è clear all input values in the form\n    setName('');\n    setContent('');\n  };\n\n  return (\n    <div className=\"Post\">\n      <div>\n        <div className=\"title\">{props.post.title}</div>\n        <div className=\"date\">\n          <div>{format(new Date(props.post.date), \"MMMM do, yyyy \")}</div>\n          <div>{format(new Date(props.post.date), \"H:mm\")}</div>\n        </div>\n      </div>\n      <div className=\"content\">{props.post.content}</div>\n      {!commentsVisible && (\n        <button\n          onClick={() => {\n            setCommentsVisible(true);\n          }}\n        >\n          show comments\n        </button>\n      )}\n      <div className=\"comments\">\n        {commentsVisible &&\n          comments.map((comment) => {\n            return <Comment comment={comment} />;\n          })}\n\n    {commentsVisible && <form className=\"comment-form\" onSubmit={handleSubmit}>\n        <label for=\"name\"></label>\n        <input placeholder=\"Name\" name=\"name\" id=\"name\" onChange={event => setName(event.target.value)}></input>\n        <label for=\"comment\"></label>\n        <input placeholder=\"Leave a comment...\" name=\"comment\" id=\"comment\" onChange={event => setContent(event.target.value)}></input>\n        <button>Submit</button>\n        </form>}\n\n        {commentsVisible && (\n          <button\n            onClick={() => {\n              setCommentsVisible(false);\n            }}\n          >\n            hide comments\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}