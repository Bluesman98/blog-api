{"ast":null,"code":"var _jsxFileName = \"/home/bluesman/repos/blog-api/blog-page/src/components/Post.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { format } from \"date-fns\";\nimport Comment from \"../components/Comment\";\nimport \"../styles/Post.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post(props) {\n  _s();\n  const [comments, setComments] = useState(null);\n  const [commentsVisible, setCommentsVisible] = useState(false);\n  const [update, setUpdate] = useState(0);\n  async function fetchComments() {\n    await fetch(`http://localhost:3000/post/${props.post._id}/comments`).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      setComments(data);\n    });\n  }\n  useEffect(() => {\n    fetchComments();\n  }, []);\n  useEffect(() => {\n    console.log('update');\n  }, [update]);\n  async function postComment(name, content) {\n    await fetch(`http://localhost:3000/post/${props.post._id}/comment/create?author=${name}&content=${content}`, {\n      method: \"POST\",\n      // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n  const [name, setName] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const handleSubmit = event => {\n    console.log(\"handleSubmit ran\");\n    event.preventDefault(); // 👈️ prevent page refresh\n\n    // 👇️ access input values here\n    console.log(\"name 👉️\", name);\n    console.log(\"content 👉️\", content);\n    postComment(name, content);\n    // 👇️ clear all input values in the form\n    setName(\"\");\n    setContent(\"\");\n    setUpdate(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: props.post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: format(new Date(props.post.date), \"MMMM do, yyyy \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: format(new Date(props.post.date), \"H:mm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: props.post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), !commentsVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCommentsVisible(true);\n      },\n      children: \"show comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [commentsVisible && comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }, this);\n      }), commentsVisible && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"comment-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Name\",\n          name: \"name\",\n          id: \"name\",\n          required: true,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Leave a comment...\",\n          name: \"comment\",\n          id: \"comment\",\n          required: true,\n          onChange: event => setContent(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), commentsVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCommentsVisible(false);\n        },\n        children: \"hide comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"7lv0oMNd2/IpnrbzCzTM1ArxkJk=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["useEffect","useState","format","Comment","Post","props","comments","setComments","commentsVisible","setCommentsVisible","update","setUpdate","fetchComments","fetch","post","_id","then","res","json","data","console","log","postComment","name","content","method","headers","setName","setContent","handleSubmit","event","preventDefault","title","Date","date","map","comment","target","value"],"sources":["/home/bluesman/repos/blog-api/blog-page/src/components/Post.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { format } from \"date-fns\";\nimport Comment from \"../components/Comment\";\nimport \"../styles/Post.css\";\n\nfunction Post(props) {\n  const [comments, setComments] = useState(null);\n  const [commentsVisible, setCommentsVisible] = useState(false);\n  const [update, setUpdate] = useState(0);\n\n  async function fetchComments() {\n    await fetch(`http://localhost:3000/post/${props.post._id}/comments`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        console.log(data);\n        setComments(data);\n      });\n  }\n\n  useEffect(() => {\n    fetchComments();\n  }, []);\n\n  useEffect(() => {\n    console.log('update')\n  }, [update]);\n\n async function postComment(name, content) {\n    await fetch(\n      `http://localhost:3000/post/${props.post._id}/comment/create?author=${name}&content=${content}`,\n      {\n        method: \"POST\", // or 'PUT'\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n  }\n\n  const [name, setName] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    console.log(\"handleSubmit ran\");\n    event.preventDefault(); // 👈️ prevent page refresh\n\n    // 👇️ access input values here\n    console.log(\"name 👉️\", name);\n    console.log(\"content 👉️\", content);\n\n    postComment(name, content);\n    // 👇️ clear all input values in the form\n    setName(\"\");\n    setContent(\"\");\n    \n    setUpdate(1)\n  };\n\n  return (\n    <div className=\"Post\">\n      <div>\n        <div className=\"title\">{props.post.title}</div>\n        <div className=\"date\">\n          <div>{format(new Date(props.post.date), \"MMMM do, yyyy \")}</div>\n          <div>{format(new Date(props.post.date), \"H:mm\")}</div>\n        </div>\n      </div>\n      <div className=\"content\">{props.post.content}</div>\n      {!commentsVisible && (\n        <button\n          onClick={() => {\n            setCommentsVisible(true);\n          }}\n        >\n          show comments\n        </button>\n      )}\n      <div className=\"comments\">\n        {commentsVisible &&\n          comments.map((comment) => {\n            return <Comment comment={comment} />;\n          })}\n\n        {commentsVisible && (\n          <form className=\"comment-form\" onSubmit={handleSubmit}>\n            <label htmlFor=\"name\"></label>\n            <input\n              placeholder=\"Name\"\n              name=\"name\"\n              id=\"name\"\n              required\n              onChange={(event) => setName(event.target.value)}\n            ></input>\n            <label htmlFor=\"comment\"></label>\n            <input\n              placeholder=\"Leave a comment...\"\n              name=\"comment\"\n              id=\"comment\"\n              required\n              onChange={(event) => setContent(event.target.value)}\n            ></input>\n            <button>Submit</button>\n          </form>\n        )}\n\n        {commentsVisible && (\n          <button\n            onClick={() => {\n              setCommentsVisible(false);\n            }}\n          >\n            hide comments\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}